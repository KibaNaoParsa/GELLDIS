	public function index(){
		
		$this->db->select("EVENTO.idEVENTO, EVENTO.NOME");
		$this->db->from("EVENTO");
		$data['EVENTO'] = $this->db->get()->result();
		
		
		$data['msg'] = '';
		$data['url'] = base_url();
		$data['modal'] = '';
		$this->parser->parse('login', $data);
	}

	public function efetuar_inscricao() {
			
			/*
			
			Tópicos para esse trecho:
			
			1. Consultar o banco de dados para conferir o número de inscritos. (40 máx., 34 ouvintes, 6 palestrantes)
				1.1. Se OK, prosseguir.
				1.2. Caso contrário, mostrar mensagem de erro na tela.
			2. Depois de 1.1, puxar os dados informados no controller para cadastro. Conferir duplicidade no CPF.
				2.1. Se OK, prosseguir.
				2.2. Caso contrário, mostrar mensagem de erro, retornando o usuário para a janela.
			3. Depois de 2.1, conferir o tipo de inscrito. 			
				3.1. Caso ouvinte, fazer a inscrição e enviar o e-mail de confirmação.
				3.2. Caso palestrante, redirecionar para a janela de título/trabalho.
				
			*/			
	
			$data['NOME'] = $this->input->post('txt_nome');	
			$data['CPF'] = $this->input->post('txt_cpf');	
			$data['INSTITUICAO'] = $this->input->post('txt_instituicao');	
			$data['EMAIL'] = $this->input->post('txt_email');
			
			$item = $this->input->get_post('tipo');
			
			if(!empty($item)) {
				$qtd = count($item);
			}
			
			for ($i = 0; $i < $qtd; $i++) {
					$data['TIPO'] = $item[$i];
			}
			
			$item2 = $this->input->get_post('evento');
			
			if(!empty($item2)) {
				$qtd = count($item2);
			}
			
			for ($i = 0; $i < $qtd; $i++) {
					$data['idEVENTO'] = $item2[$i];
			}
			
			
			// Tópico 1
			/*
			$this->db->select("EVENTO.numtotal");
			$this->db->from("EVENTO");
			$this->db->where("EVENTO.idEVENTO", $data['idEVENTO']);
			$conf = $this->db->get()->result();
			
			foreach($conf as $c) {
				if($c->numtotal < 40) {
					echo '<script type="text/javascript">confirm("Há alguma pergunta cadastrada com essa dimensão. Apague a pergunta primeiro.");</script>';				
				}			
			
			}
			*/
			
			// Tópico 2
			
			$this->db->select("INSCRITO.idINSCRITO");
			$this->db->from("INSCRITO");
			$this->db->where("INSCRITO.cpf", $data['CPF']);
			$conf = $this->db->get()->result();
			
			if(count($conf) > 0) {

				// Caso o CPF esteja duplicado, a mensagem de erro será exibida.
				
				echo '<script type="text/javascript">confirm("O CPF informado já foi cadastrado.");</script>';	
				$this->index();		

			} 	else {		
			
				// Prosseguindo caso tudo esteja OK.
							 	
			 	$this->db->select("EVENTO.numouvintes, EVENTO.numtrabalhos, EVENTO.numtotal");
			 	$this->db->from("EVENTO");
			 	$this->db->where("EVENTO.idEVENTO", $data['idEVENTO']);
				$total = $this->db->get()->result();
							 	
			 	if ($data['TIPO'] == 0) {
			 		
			 		// Caso o aplicante seja ouvinte, conferir o número de inscritos para deferir/indeferir.

					foreach ($total as $t) {
						if ($t->numouvintes < 34) {
							
							$data['SITUACAO'] = 0;
							
							$this->db->insert('INSCRITO', $data);
						
							$dat['numouvintes'] = $t->numouvintes;
							$dat['numouvintes'] += 1;
							$dat['numtotal'] = $t->numtotal;
							$dat['numtotal'] += 1;
			
							$this->db->where('EVENTO.idEVENTO', $data['idEVENTO']);
							$this->db->update('EVENTO', $dat);																		
							
							echo '<script type="text/javascript">confirm("O cadastro foi efetuado com sucesso!");</script>';	
							$this->index();
							// Enviar e-mail de confirmação
							
							
							
																			
						
						} else {
						
							$data['SITUACAO'] = 1;
							
							$this->db->insert('INSCRITO', $data);
									
							echo '<script type="text/javascript">confirm("O limite de cadastros já foi atingido.");</script>';	
							$this->index();


							// Mandar e-mail de limite						

						
						}					
					}			 		
			 		
			 	} else if ($data['TIPO'] == 1) {
			 		
					// Enviar para tela de trabalhos
					$data['url'] = base_url();
					$this->parser->parse('projeto', $data);								 		

			 		/*
					foreach ($total as $t) {
						if ($t->numtrabalhos < 6) {
							
							// Enviar para tela onde serão inseridos título e trabalho
													
						} else {
												
						}					
					}*/
			 	
			 	}

			}	
	
	}



	public function inscricao_trabalho() {

		$data['NOME'] = $this->input->post('nome');
		$data['INSTITUICAO'] = $this->input->post('instituicao');
		$data['EMAIL'] = $this->input->post('email');
		$data['CPF'] = $this->input->post('CPF');
		$data['TITULO'] = $this->input->post('txt_titulo');
		$data['ARTIGO'] = $this->input->post('txt_artigo');
		$data['idEVENTO'] = $this->input->post('idEVENTO');
		$data['TIPO'] = 1;
		
		$this->db->select("EVENTO.numtrabalhos, EVENTO.numtotal");
	 	$this->db->from("EVENTO");
	 	$this->db->where("EVENTO.idEVENTO", $data['idEVENTO']);
		$total = $this->db->get()->result();					
		
		foreach ($total as $t) {

			if ($t->numtrabalhos < 6) {
							
				$data['SITUACAO'] = 0;
							
				$this->db->insert('INSCRITO', $data);
						
				$dat['numtrabalhos'] = $t->numtrabalhos;
				$dat['numtrabalhos'] += 1;
				$dat['numtotal'] = $t->numtotal;
				$dat['numtotal'] += 1;
			
				$this->db->where('EVENTO.idEVENTO', $data['idEVENTO']);
				$this->db->update('EVENTO', $dat);																		
							
				echo '<script type="text/javascript">confirm("O cadastro foi efetuado com sucesso!");</script>';	
				$this->index();
				// Enviar e-mail de confirmação					
						
			} else {
						
				$data['SITUACAO'] = 1;
							
				$this->db->insert('INSCRITO', $data);					
						
				echo '<script type="text/javascript">confirm("O limite de cadastros já foi atingido.");</script>';	
				$this->index();

				// Mandar e-mail de limite						

						
			}					
		
		}
	
	}


